{"version":3,"sources":["components/header.jsx","components/form.jsx","components/results.jsx","components/history.jsx","components/footer.jsx","index.jsx"],"names":["Header","superagent","require","Form","props","state","method","url","loading","updateUrl","bind","updateMethod","handleForm","event","this","setState","target","value","e","preventDefault","apiUrl","get","then","data","body","searchObj","localStorage","setItem","JSON","stringify","handleSubmit","catch","console","error","data-testid","className","onSubmit","htmlFor","onChange","type","id","placeholder","name","onClick","defaultChecked","src","alt","React","Component","results","count","headers","history","historyList","i","key","savedSearch","getItem","push","parse","map","searchRecord","Footer","App","searched","payload","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.0416c3d2.chunk.js","sourcesContent":["import React from 'react';\nimport '../design/header.scss';\n\nfunction Header() {\n  return (\n    <header>\n      <h1>RESTy</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport '../design/form.scss';\nconst superagent = require('superagent');\n\n\nclass Form extends React.Component { \n  constructor(props) {\n    super(props);\n    this.state = { method: '', url: '', loading: false};\n    this.updateUrl = this.updateUrl.bind(this);\n    this.updateMethod = this.updateMethod.bind(this);\n    this.handleForm = this.handleForm.bind(this);\n  }\n\n  updateUrl(event) {\n    this.setState({ url: event.target.value });\n  }\n  updateMethod(event) {\n    this.setState({ method: event.target.value });\n  }\n\n  handleForm(e) {\n    e.preventDefault();\n    this.setState({ loading: true });\n    let apiUrl = this.state.url;\n    if (this.state.method === 'GET') {\n      superagent.get(apiUrl)\n        .then(data => {\n          this.setState({ loading: false });\n          if (data.body !== null) {\n            let searchObj = { method: this.state.method, url: this.state.url, body: data.body};\n            localStorage.setItem(this.state.url, JSON.stringify(searchObj));\n            this.props.handleSubmit(data);\n          }\n        }).catch(e => {\n          this.setState({ loading: false });\n          console.error(e);});\n    }\n  }\n\n  render() {\n    return (\n      <form data-testid=\"form\" className=\"form\" onSubmit={this.handleForm}>\n        <fieldset>\n          <legend>Enter your URL</legend>\n          <label htmlFor=\"URL\">URL:</label>\n          <input onChange={this.updateUrl} type=\"text\" id=\"url\" placeholder=\"url\" name=\"url\" />\n        </fieldset>\n        <fieldset>\n          <legend>Method</legend>\n          <input onClick={this.updateMethod} type=\"radio\" id=\"post\" name=\"method\" value=\"POST\" defaultChecked />\n          <label htmlFor=\"post\">POST</label>\n          <input onClick={this.updateMethod} type=\"radio\" id=\"put\" name=\"method\" value=\"PUT\" />\n          <label htmlFor=\"put\">PUT</label>\n          <input onClick={this.updateMethod} type=\"radio\" id=\"get\" name=\"method\" value=\"GET\" />\n          <label htmlFor=\"get\">GET</label>\n          <input onClick={this.updateMethod} type=\"radio\" id=\"delete\" name=\"method\" value=\"DELETE\" />\n          <label htmlFor=\"delete\">DELETE</label>\n        </fieldset>\n        <fieldset><legend>Your Request</legend>\n          {this.state.method} : {this.state.url}\n        </fieldset>\n        {this.state.loading ? < img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" alt=\"loading\" /> : <input id=\"submit\" type=\"submit\" value=\"Submit\"></input>}\n      </form>\n    );\n  }\n}\n\nexport default Form;","import React from 'react';\nimport JSONPretty from 'react-json-pretty';\nimport '../design/results.scss';\n\nfunction results(props) {\n  if (props.results.count > 0) {\n    return (\n      <div className=\"results\">\n        <p>The Count is: {props.results.count}</p>\n        <p>Headers:</p>\n        <JSONPretty id=\"json-pretty\" data={props.results.headers}></JSONPretty>\n        <p>Body:</p>\n        <JSONPretty id=\"json-pretty\" data={props.results.body}></JSONPretty>\n      </div>\n    );\n  } else {\n    return null;\n  }\n  \n}\n\n\nexport default results;\n","import React from 'react';\nimport '../design/history.scss';\n\nfunction history() {\n  let historyList = [];\n  let i = 0;\n  while (localStorage.key(i)) {\n    let key = localStorage.key(i);\n    let savedSearch = localStorage.getItem(key);\n    historyList.push(JSON.parse(savedSearch));\n    i++;\n  }\n \n  if (historyList !== []) {\n    return (\n      <ul className=\"list\">\n        {historyList.map(searchRecord => <li className=\"search\" key={searchRecord}>{searchRecord.method} : {searchRecord.url}</li>)}\n      </ul>\n    );\n  } else {\n    return null;\n  }\n  \n}\n\n\nexport default history;","import React from 'react';\nimport '../design/footer.scss';\n\nfunction Footer() {\n  return (\n    <footer>\n      <h3>an API search tool</h3>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app.scss';\n\nimport Header from './components/header.jsx';\nimport Form from './components/form.jsx';\nimport Results from './components/results.jsx';\nimport History from './components/history.jsx';\nimport Footer from './components/footer.jsx';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { count: '', headers: {}, body: '', searched: []};\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(payload, searchObj) {\n    this.setState({ headers: payload.headers, body: payload.body.results, count: payload.body.count });\n    this.state.searched.push(searchObj);\n    this.setState({searched: this.state.searched});\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <Header />\n        <Form handleSubmit={this.handleSubmit}/>\n        <Results results={this.state}/>\n        <History> \n          {this.state.searched}\n        </History> \n        <Footer />\n      </div>\n    );\n  }\n} \n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}